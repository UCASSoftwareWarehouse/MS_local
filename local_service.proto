syntax = "proto3";
package pb;
import "google/protobuf/timestamp.proto";
option go_package = "./pb_gen";
service MSLocal {
  rpc SayHello(HelloRequest) returns (HelloReply){}
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse){}
  rpc LoginUser(LoginUserRequest) returns(LoginUserResponse){}
  rpc GetUser(GetUserRequest) returns (GetUserResponse){}
  rpc DeleteUser(DeleteUserRequest)returns(DeleteUserResponse){}
  rpc UpdateUser(UpdateUserRequest) returns(UpdateUserResponse){}
  //   project
  rpc CreateProject(CreateProjectRequest) returns(CreateProjectResponse){}
  rpc DeleteProject(DeleteProjectRequest) returns(DeleteProjectResponse){}
  rpc Upload(stream UploadRequest) returns(UploadResponse){}
  rpc GetProject(GetProjectRequest) returns(stream GetProjectResponse){}
  rpc Download(DownloadRequest) returns(stream DownloadResponse){}
  rpc SearchProject(SearchProjectRequest) returns(stream SearchProjectResponse){}
}

enum FileType{
  project = 0;
  codes = 1;
  binary = 2;
  code = 3;
}

message FileInfo{
  string fileName = 1;
  uint64 fileSize = 2;
  google.protobuf.Timestamp updatetime = 3;
}




message Project{
  uint64 id = 1;
  string projectName = 2;
  uint64 userId = 3;
  string tags = 4;
  string license = 5;
  google.protobuf.Timestamp updatetime = 6;
  string projectDescription =7;
  string codeAddr = 8;
  string binaryAddr = 9;
  uint32 classifiers = 10;
}

message CreateProjectRequest{
  //  uint64 id = 1;
  string projectName = 1;
  uint64 userId = 2;
  string tags = 3;
  string license = 4;
  //  google.protobuf.Timestamp Updatetime = 6;
  string projectDescription =5;
  uint32 classifiers = 6;
  //  string CodeAddr = 8;
  //  string BinaryAddr = 9;
}

message CreateProjectResponse{
  Project projectInfo = 1;
}

message GetProjectRequest{
  uint64 uid = 1;
  uint32 page = 2;
  uint32 limit = 3;
}
message GetProjectResponse{
  Project projectInfo = 1;
}

message SearchProjectRequest{
  uint32 page = 1;
  uint32 limit = 2;
  string keyWord = 3;
  uint32 classifiers = 4;
}

message SearchProjectResponse{
  Project projectInfo = 1;
}

message DeleteProjectRequest{
  uint64 pid = 1;
  uint64 uid = 2;
  FileType fileType = 3;
}

message DeleteProjectResponse{
  string message = 1;
}


message UploadMetadata{
  uint64 projectId = 1;
  uint64 userId = 2;
  FileInfo fileInfo = 3;
  FileType fileType = 4;
}
message UploadRequest{
  oneof data{
    UploadMetadata metadata = 1;
    bytes content = 2;//using chunks
  }
}
message UploadResponse{
  Project projectInfo = 1;
}


message DownloadRequest{
  string fileId = 1;
  uint64 userId = 2;
  FileType fileType = 3;
}
message DownloadMetadate{
  FileInfo fileInfo = 1;
  FileType fileType = 2;
}
message DownloadResponse{
  oneof data{
    DownloadMetadate metadata = 1;
    bytes content = 2;
  }
}
//message UserRegisterResponse{
//   User registeredUser=1;
//   Error error =2;
//}
//
//message Error{
//   string code = 1;
//   string message = 2;
//}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}

//3bit
enum OperatingSystem{
  OperatingSystemNull = 0;
  Android = 1;
  Windows = 2;
  Linux = 3;
  MacOs = 4;
  OS_independent = 5;
  OtherOS = 255;
}

//5bit
enum ProgrammingLanguage{
  ProgrammingLanguageNull = 0;
  Python = 1;
  Java = 2;
  JavaScript = 3;
  CAndCPlusPlus = 4;
  PHP = 5;
  R = 6;
  Swift = 7;
  Kotlin = 8;
  Matlab = 9;
  Go = 10;
  Rust = 11;
  Ruby = 12;
  OtherPL = 255;
}
//5bit
enum NaturalLanguage{
  LanguageNull = 0;
  English = 1;
  Chinese = 2;
  OtherNL = 255;
}

//5bit Topic
enum Topic{
  TopicNull = 0;
  AdativeTechnologies = 1;
  ArtisticSoftware = 2;
  Communication = 3;
  Database = 4;
  DesktopEnvironment = 5;
  Documentation = 6;
  Education = 7;
  Games = 8;
  HomeAutomation = 9;
  Internet = 10;
  MultiMedia = 11;
  Office = 12;
  Printing = 13;
  Religion = 14;
  Scientific = 15;
  Security = 16;
  Sociology = 17;
  SoftWareDevelopment = 18;
  System = 19;
  Terminals = 20;
  TextEditors =21;
  TextProcessing = 22;
  Utilities = 23;
  OtherTp = 255;
}



message User{
  uint64 id = 1;
  string name=2;
  string password=3;
}

message RegisterUserRequest{
  string name = 1;
  string password = 2;
}

message RegisterUserResponse{
  User user = 1;
}

message LoginUserRequest{
  string name = 1;
  string password = 2;
}

message LoginUserResponse{
  string token = 1;
}

message GetUserRequest{
  uint64 id = 1;
}

message DeleteUserRequest{
  uint64 id = 1;
  string name = 2;
  string password = 3;
}

enum UpdateType{
  uname = 0;
  upwd = 1;
  all = 2;
}


message UpdateUserRequest{
  uint64  uid = 1;
  UpdateType type = 2;
  string newName = 3;
  string newPassword=4;
}

message GetUserResponse{
  User user = 1;
}

message DeleteUserResponse{
  string message = 1;
}

message UpdateUserResponse{
  User user = 1;
}